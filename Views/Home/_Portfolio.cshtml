@using fullstack_portfolio.Models
@model Project[]

@{
  string DefaultImageUrl = Url.Content("~/images/white-grid.png");
  string? GetImageUrl(string? rawUrl)
  {
    if (string.IsNullOrWhiteSpace(rawUrl))
      return null;
    if (!System.IO.File.Exists(rawUrl))
      return null;
    return Url.Content(rawUrl.Split("wwwroot")[1]);
  }
}

<section class="grid gap-6 max-w-content mx-auto md:grid-cols-2">
  <div class="grid max-w-6xl lg:mx-auto md:grid-cols-2 md:col-span-full">
    <div class="space-y-4 max-w-xl mx-auto">
      <div class="subheader">
        <p><span>// 04</span> Works</p>
        <h2>My Portfolio</h2>
      </div>
      <p>
        Leo in netus enim sed auctor. Enim dolor elementum velit aliquam enim. In feugiat
        diam bibendum egestas amet ullamcorper ipsum. Massa semper enim mauris leo.
        At fusce nulla ut enim aliquet purus praesent eleifend.
      </p>
      <p>
        If you would like to hear more about any projects, feel free to contact me.
        I am always down to discuss the process and the technologies used in them.
      </p>
    </div>
    <div class="relative flex flex-col justify-center min-h-[400px]">
      <div class="pb-10">
        <p>Featured Project:</p>
        <h3 
          class="text-5xl font-bold max-w-xs bg-primary-900/70 px-4 py-2 
          outline outline-1 outline-primary-100/20 rounded-md backdrop-blur-sm">
          Kantolan KunnonSali
        </h3>
        <a href="" class="btn bg-secondary w-max mt-4">View Project</a>
      </div>
      <img src="~/images/placeholder-phone.png" alt="placeholder phone"
        class="absolute top-0 right-0 -z-10 h-full">
    </div>
  </div>

  <div class="md:col-span-full">
    <p>Filter by:</p>
    <ul class="flex flex-wrap gap-2">
      <li class="text-secondary">All <span>[10]</span></li>
      <li>/</li>
      <li>Web Development <span>[7]</span></li>
      <li>/</li>
      <li>Graphic Design <span>[3]</span></li>
    </ul>
  </div>

  <div class="grid grid-cols-fluid gap-4 md:col-span-2">
    @foreach (var project in Model.OrderByDescending(p => p.FinishedAt))
    {
      <div 
      class="w-full aspect-[3/2] relative overflow-clip shadow-primary/50 drop-shadow-lg group
        @(project.IsLarge ? "md:row-span-2 md:aspect-auto" : "")">

        @if (GetImageUrl(project.ImageUrl) != null)
        {
          <img src="@GetImageUrl(project.ImageUrl)" loading="lazy" decoding="async"
            alt="@(project.AltText ?? $"Image of the {project.Title} project")"
            class="w-full h-full object-cover saturate-0
            motion-safe:transition-all motion-safe:group-hover:scale-110 group-hover:saturate-50">
        }
        else
        {
          <div class="bg-gradient-to-tr from-black to-primary-900 absolute top-0 left-0 w-full h-full isolate">
            <div 
              class="grid-pattern opacity-50 w-full h-full motion-safe:transition-all motion-safe:group-hover:scale-110">
            </div>
          </div>
        }

        <div class="absolute bottom-0 left-0 w-full z-10
          py-2 px-4 leading-snug">
          <p class="opacity-75 drop-shadow-md">@Html.DisplayTextFor(m => project.Category)</p>
          <h4 class="font-bold text-2xl capitalize drop-shadow-md">@project.Title</h4>
        </div>

        <!-- Add a smooth gradient to bottom of image for text contrast -->
        <div class="bg-gradient-to-t from-black to-transparent h-1/2 w-full
        absolute bottom-0 left-0 mix-blend-multiply opacity-95">
        </div>
        <!-- Color the black and white images to match the theme -->
        <div class="bg-secondary h-full w-full opacity-50 mix-blend-multiply
        absolute bottom-0 left-0 motion-safe:transition-all group-hover:opacity-25">
        </div>
      </div>
    }
  </div>
</section>
