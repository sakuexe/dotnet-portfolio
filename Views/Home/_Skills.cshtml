@using fullstack_portfolio.Models.ViewModels
@using fullstack_portfolio.Models
@model Skill[]

@{
var SkillBars = Model.Where(s => s.Type == SkillType.Bar);
var SkillPies = Model.Where(s => s.Type == SkillType.Pie);
}

<section id="skills" class="grid gap-8 max-w-content mx-auto lg:grid-cols-2">
  <div class="space-y-6 flex flex-col justify-center">
    <div class="subheader">
      <p><span>// 03</span> Skills</p>
      <h2>My Skills & Tools</h2>
    </div>
    <p>
      Here is a list of some of the skills I have aquired along the way.
      I have intended this list to be somewhat of a represantation of my
      confidence level in working with each of these technologies.
    </p>
    <p>
      Do not look too deeply into the values, as they are just a rough
      estimate of how I am feeling currently with them.
    </p>
    <div id="skill-bars" class="space-y-4">
      @foreach (var (skill, index) in SkillBars.Select((s, i) => (s, i)))
      {
      <div>
        <p>@skill.Title</p>
        <div class="bg-primary-700">
          <div class="h-2 @(index % 2 == 0 ? "bg-secondary" : "bg-accent")"
          style="width: @(skill.Value)%;"></div>
        </div>
      </div>
      }
    </div>
  </div>
  <div id="skill-pies" class="flex flex-wrap gap-4 justify-center items-center">
    @foreach (var (skill, index) in SkillPies.Select((s, i) => (s, i)))
    {
    <div class="w-44 space-y-5">
      <div 
        class="pie aspect-square rounded-full 
        @(@index % 2 == 0 ? "text-secondary" : "text-accent")"
        style="--value: @skill.Value;">
        <p class="font-bold text-primary-100">@skill.Value</p>
      </div>
      <p class="text-center">
        @skill.Title
      </p>
    </div>
    }
  </div>
</section>

<style>
  /* https://www.freecodecamp.org/news/css-only-pie-chart/ */
  .pie {
    --pieThickness: 0.6rem;
    position: relative;
    width: 100%;
    display: inline-grid;
    place-content: center;
  }
  .pie::before {
    content: "";
    position: absolute;
    inset: 0;
    z-index: -1;
    border-radius: 50%;
    background: conic-gradient(
      currentcolor calc(var(--value) * 1%),
      transparent 0
    );
    -webkit-mask: radial-gradient(
      farthest-side,
      #0000 calc(99% - var(--pieThickness)),
      #000 calc(100% - var(--pieThickness))
    );
    mask: radial-gradient(
      farthest-side,
      #0000 calc(99% - var(--pieThickness)),
      #000 calc(100% - var(--pieThickness))
    );
  }
</style>

