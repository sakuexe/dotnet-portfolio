@using System.ComponentModel.DataAnnotations;
@using System.Reflection;
@using fullstack_portfolio.Data;
@using fullstack_portfolio.Utils;
@model IMongoModel

@{
  var id = @Model.GetType().GetProperty("_id")?.GetValue(Model);
  var collection = Context.Request.Path.Value?.Split("/")[2];
}


<section class="max-w-4xl mx-auto space-y-6 px-6">

  <div class="subheader">
    <p><span>//</span> Edit</p>
    <h1>@collection</h1>
  </div>

  <form id="edit" action="/dashboard/@collection/@id/save" method="post" enctype="multipart/form-data">
    @foreach (var field in Model.GetType().GetProperties())
    {
      if (field.Name == "_id")
      {
        <input asp-for="@field" name="@field.Name" value="@id" hidden aria-hidden="true" />
        continue;
      }

      @if (field.PropertyType.IsEnum)
      {
        <label>
          @field.Name
          @Html.DropDownList(field.Name, new SelectList(Enum.GetValues(field.PropertyType)),
               "Select " + field.Name, new { @class = "bg-primary" })
        </label>
      }

      else if (EditUtils.IsTextArea(field))
      {
        <label>
          @field.Name
          @Html.TextArea(field.Name, field.GetValue(Model)?.ToString())
        </label>
      }

      else if (EditUtils.IsFile(field))
      {
        <label>
          @field.Name
          <label for="file">
            <p>Upload Image</p>
            @if (!string.IsNullOrEmpty(EditUtils.TrimPath(field, Model)))
            {
              <p>
                Current: <a href="@EditUtils.TrimPath(field, Model)">@EditUtils.TrimPath(field, Model)</a>
              </p>
            }
          </label>
          <input type="file" id="file" name="file" value="@field.GetValue(Model)"></input>
          <!-- the actual image url -->
          <!-- it is added so that the url will not get removed if an empty file is passed -->
          <input name="@field.Name" value="@field.GetValue(Model)" hidden aria-hidden="true" />
        </label>
      }

      else if (field.PropertyType.ToString() == "System.Boolean")
      {
        <div>
          @Html.CheckBox(field.Name, (bool)(field.GetValue(Model) ?? false))
          <label for="@field.Name">@field.Name</label>
        </div>
      }

      // if password
      else if (EditUtils.IsPassword(field))
      {
        <label>
          @field.Name
          <div>
            <input asp-for="@field" name="@field.Name" value="@field.GetValue(Model)" id="@field.Name" type="password" class="password" />
            <button type="button">ðŸ‘€</button>
          </div>
        </label>
      }

      else if (field.GetCustomAttribute<HiddenInputAttribute>() != null)
      {
        <input asp-for="@field" name="@field.Name" value="@field.GetValue(Model)" hidden aria-hidden="true" />
      }

      else
      {
        <label>
          @field.Name
          <input asp-for="@field" name="@field.Name" value="@field.GetValue(Model)" id="@field.Name" />
        </label>
      }
      <span data-valmsg-for="@field.Name" data-valmsg-replace="true" class="text-red-500 field-validation-valid"></span>
    }

    <hr>

    <button type="submit">Save</button>
    <button type="button">Remove (todo)</button>
    <span id="general-error" class="text-red-500"></span>
  </form>
</section>

@section Scripts {
  <script src="~/js/savechanges.js" defer></script>
  <script src="~/js/stringlist.js" defer></script>
  <script src="~/js/togglepassword.js" defer></script>
}

@section Styles {
  <link rel="stylesheet" href="~/css/edit.css" />
}
